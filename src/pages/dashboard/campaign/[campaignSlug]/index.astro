---
import SideBarWrapper from '@components/app/components/side-bar/side-bar'
import CampaignScreen from '@components/app/screens/campaign'
import { ModeToggle } from '@components/ui/mode-toggle'
import { db } from '@db/db'
import { arc, campaign as campaignSchema, thing } from '@db/schema'
import MainLayout from '@layouts/main-layout.astro'
import { desc } from 'drizzle-orm'
import { and, eq } from 'drizzle-orm'
import NavBar from '@/components/app/components/nav-bar/nav-bar'

const { campaignSlug } = Astro.params
const { user } = Astro.locals

if (!campaignSlug) {
  return Astro.redirect('/404')
}

const campaignData = await db
  .select()
  .from(campaignSchema)
  .where(
    and(
      eq(campaignSchema.userId, user.id),
      eq(campaignSchema.slug, campaignSlug)
    )
  )
  .limit(1)

const campaign = campaignData[0]

if (!campaign) {
  return Astro.redirect('/404')
}

const arcData = await db
  .select()
  .from(arc)
  .where(eq(arc.campaignId, campaign.id))
  .orderBy(desc(arc.updatedAt))

const thingData = await db
  .select()
  .from(thing)
  .where(eq(thing.campaignId, campaign.id))
  .orderBy(desc(thing.updatedAt))
  .limit(20)
---

<MainLayout title={campaign.name}>
  <NavBar
    transition:persist
    user={user}
    campaignSlug={campaignSlug}
    client:load
  />
  <div class='flex'>
    <SideBarWrapper
      user={user}
      campaignSlug={campaignSlug}
      client:load
      transition:persist
    />
    <main class='flex-1 space-y-6 p-4'>
      <CampaignScreen
        user={user}
        campaignSlug={campaignSlug}
        initialArcs={arcData}
        latestThings={thingData}
        client:load
      />
    </main>
  </div>
  <ModeToggle client:visible />
</MainLayout>
