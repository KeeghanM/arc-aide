---
export interface FeatureBlockProps {
  title: string
  description: string
  features: Array<{
    icon?: any // React component
    title: string
    description: string
    link?: string
  }>
  layout?: 'grid' | 'list' | 'cards'
  columns?: 2 | 3 | 4
  theme?: 'default' | 'fantasy' | 'minimal'
  showNumbers?: boolean
}

const {
  title,
  description,
  features,
  layout = 'grid',
  columns = 3,
  theme = 'default',
  showNumbers = false,
} = Astro.props as FeatureBlockProps

const themeClasses = {
  default: 'bg-background',
  fantasy: 'bg-gradient-to-b from-blue-50 to-orange-50  ',
  minimal: 'bg-primary/15',
}

const gridClasses = {
  2: 'md:grid-cols-2',
  3: 'md:grid-cols-2 lg:grid-cols-3',
  4: 'md:grid-cols-2 lg:grid-cols-4',
}
---

<section class={`py-20 ${themeClasses[theme]}`}>
  <div class='container mx-auto px-4'>
    <div class='mb-16 text-center'>
      <h2 class='text-primary mb-4 text-3xl font-bold md:text-4xl'>
        {title}
      </h2>
      <p class='text-muted-foreground mx-auto max-w-3xl text-lg md:text-xl'>
        {description}
      </p>
    </div>

    {
      layout === 'grid' && (
        <div class={`grid grid-cols-1 gap-8 ${gridClasses[columns]}`}>
          {features.map((feature, index) => (
            <div class='group'>
              {feature.link ? (
                <a
                  href={feature.link}
                  class='block h-full'
                >
                  <div class='bg-card border-border hover:border-primary/50 h-full rounded-lg border p-6 shadow-sm transition-all hover:shadow-md'>
                    <div class='flex items-start space-x-4'>
                      {showNumbers && (
                        <div class='bg-primary/10 text-primary flex h-8 w-8 flex-shrink-0 items-center justify-center rounded-full text-sm font-bold'>
                          {index + 1}
                        </div>
                      )}
                      {feature.icon && !showNumbers && (
                        <div class='bg-primary/10 flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full'>
                          {(() => {
                            const IconComponent = feature.icon
                            return (
                              <IconComponent className='w-5 h-5 text-primary' />
                            )
                          })()}
                        </div>
                      )}
                      <div class='flex-1'>
                        <h3 class='group-hover:text-primary mb-2 text-lg font-semibold transition-colors'>
                          {feature.title}
                        </h3>
                        <p class='text-muted-foreground text-sm leading-relaxed'>
                          {feature.description}
                        </p>
                      </div>
                    </div>
                  </div>
                </a>
              ) : (
                <div class='bg-card border-border h-full rounded-lg border p-6 shadow-sm'>
                  <div class='flex items-start space-x-4'>
                    {showNumbers && (
                      <div class='bg-primary/10 text-primary flex h-8 w-8 flex-shrink-0 items-center justify-center rounded-full text-sm font-bold'>
                        {index + 1}
                      </div>
                    )}
                    {feature.icon && !showNumbers && (
                      <div class='bg-primary/10 flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full'>
                        {(() => {
                          const IconComponent = feature.icon
                          return (
                            <IconComponent className='w-5 h-5 text-primary' />
                          )
                        })()}
                      </div>
                    )}
                    <div class='flex-1'>
                      <h3 class='mb-2 text-lg font-semibold'>
                        {feature.title}
                      </h3>
                      <p class='text-muted-foreground text-sm leading-relaxed'>
                        {feature.description}
                      </p>
                    </div>
                  </div>
                </div>
              )}
            </div>
          ))}
        </div>
      )
    }

    {
      layout === 'cards' && (
        <div class={`grid grid-cols-1 gap-8 ${gridClasses[columns]}`}>
          {features.map((feature, index) => (
            <div class='bg-card border-border group rounded-xl border p-8 shadow-sm transition-all hover:shadow-lg'>
              <div class='text-center'>
                {showNumbers && (
                  <div class='bg-primary/10 text-primary mx-auto mb-6 flex h-16 w-16 items-center justify-center rounded-full text-2xl font-bold'>
                    {index + 1}
                  </div>
                )}
                {feature.icon && !showNumbers && (
                  <div class='bg-primary/10 mx-auto mb-6 flex h-16 w-16 items-center justify-center rounded-full'>
                    {(() => {
                      const IconComponent = feature.icon
                      return <IconComponent className='w-6 h-6 text-primary' />
                    })()}
                  </div>
                )}
                <h3 class='mb-4 text-xl font-semibold'>{feature.title}</h3>
                <p class='text-muted-foreground leading-relaxed'>
                  {feature.description}
                </p>
              </div>
            </div>
          ))}
        </div>
      )
    }

    {
      layout === 'list' && (
        <div class='mx-auto max-w-4xl space-y-8'>
          {features.map((feature, index) => (
            <div class='bg-card border-border flex items-start space-x-6 rounded-lg border p-6 shadow-sm'>
              {showNumbers && (
                <div class='bg-primary/10 text-primary flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full text-lg font-bold'>
                  {index + 1}
                </div>
              )}
              {feature.icon && !showNumbers && (
                <div class='bg-primary/10 flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full'>
                  {(() => {
                    const IconComponent = feature.icon
                    return <IconComponent className='w-5 h-5 text-primary' />
                  })()}
                </div>
              )}
              <div class='flex-1'>
                <h3 class='mb-2 text-xl font-semibold'>{feature.title}</h3>
                <p class='text-muted-foreground leading-relaxed'>
                  {feature.description}
                </p>
              </div>
            </div>
          ))}
        </div>
      )
    }
  </div>
</section>
